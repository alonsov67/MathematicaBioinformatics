(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    229384,       4470]
NotebookOptionsPosition[    224594,       4382]
NotebookOutlinePosition[    225075,       4401]
CellTagsIndexPosition[    225032,       4398]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mathematica for Bioinformatics", "Title",
 CellChangeTimes->{{3.716505231034802*^9, 3.7165052399525843`*^9}, {
  3.7189700660987*^9, 3.718970066321953*^9}, {3.719671162174827*^9, 
  3.719671169138997*^9}, {3.719918559461687*^9, 3.719918616051854*^9}, {
  3.719918720054628*^9, 3.719918725308221*^9}, {3.7199190461734447`*^9, 
  3.719919048693425*^9}},ExpressionUUID->"8fce1eb3-3baf-4d7c-8a22-\
51601254c34a"],

Cell[TextData[{
 StyleBox["by George I. Mias, PhD\n",
  FontColor->RGBColor[
   0.1573052567330434, 0.15793087663080796`, 0.4541237506675822]],
 Cell[BoxData[
  TemplateBox[{"\"http://georgemias.org\"", "http://georgemias.org"},
   "HyperlinkURL"]], "Output",
  CellChangeTimes->{3.719919204810491*^9, 3.719919290636554*^9},
  FontFamily->"Source Code Pro",
  FontSize->18,ExpressionUUID->"b2a0e3ab-fbc5-403c-a77f-f9452b886e7e"]
}], "Text",
 CellChangeTimes->{{3.7199190500652037`*^9, 3.719919115146494*^9}, 
   3.7199191833934107`*^9, {3.7199192683634*^9, 3.719919303306136*^9}, 
   3.719919352773055*^9},
 FontSize->24,
 FontWeight->"Bold",ExpressionUUID->"8bf39aff-c1cd-4703-a4e0-7331c05c1135"],

Cell[CellGroupData[{

Cell["Chapter 1:  Prolog: Bioinformatics with the Wolfram Language", "Chapter",
 CellChangeTimes->{{3.716505231034802*^9, 3.7165052399525843`*^9}, {
   3.7189700660987*^9, 3.718970066321953*^9}, {3.719671162174827*^9, 
   3.719671169138997*^9}, {3.719918559461687*^9, 3.7199185831615763`*^9}, {
   3.719940867380904*^9, 3.719940871753984*^9}, {3.7221794702312393`*^9, 
   3.7221794724783154`*^9}, 
   3.722949928609507*^9},ExpressionUUID->"ee101586-1e20-47e9-8e2d-\
aa6489d0781f"],

Cell[CellGroupData[{

Cell["Wolfram Language", "Section",
 CellChangeTimes->{{3.720024290915996*^9, 3.720024294601527*^9}, {
  3.722179484472821*^9, 
  3.722179495102632*^9}},ExpressionUUID->"4fe8dba8-d822-42dc-9733-\
6a2e5c0a7c4a"],

Cell[TextData[{
 StyleBox["Wolfram Language Evaluations.",
  FontWeight->"Bold"],
 " We will be using Mathematica throughout this book.The code for each \
chapter is available in the ",
 StyleBox["notebook",
  FontSlant->"Italic"],
 "s accompanying this monograph. A basic introduction to the language is \
presented in the next chapter.Here, we provide just enough information to get \
you started and also to be able to evaluate the code in this chapter.\n\nA \
notebook is the main working/coding document for Mathematica (extension ",
 StyleBox[".nb",
  FontSlant->"Italic"],
 "). After you start Mathematica on your computer you can open a working \
document for coding  notebook is displayed. Alternatively a new notebook can \
be started using the application menus by selecting File \[Rule]  New \[Rule] \
Notebook. In notebooks (extension .nb), code is put in input chunks in cells, \
outlined in light brackets  (visible by hovering the mouse at the right edge \
of a notebook). Output is produced directly below the input, also outlined \
with a cell bracket, and output and input pairs are outlined with an overall \
external cell bracket. To create a new cell in a notebook move the cursor \
within the notebook until it appears as horizontal and click. A horizontal \
bar with then appear and a new cell will be created in that location where we \
can now type new code."
}], "Text",
 CellChangeTimes->{{3.720024495842773*^9, 
  3.7200246148791513`*^9}},ExpressionUUID->"8bba13dc-b1f3-43bd-bc90-\
7e31a32f6998"],

Cell["\<\
To evaluate a cell with input code, as long as your cursor is within the cell \
containing the code, or the cell is selected, you can type Shift+Enter and \
the code will be evaluated. Evaluated code will be prepended with  In[i]:= \
input code, where i denotes the ith evaluation. The corresponding ith output \
will begin with Out[n]= evaluation results. The tag i will be incremented \
automatically for the same coding session.
\
\>", "Text",
 CellChangeTimes->{{3.720024629008275*^9, 3.720024633511608*^9}, {
  3.720024715975473*^9, 
  3.720024738180674*^9}},ExpressionUUID->"1c4f6601-265a-4b80-9283-\
0636c2c4d8cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Input",
 CellChangeTimes->{{3.717855796047386*^9, 
  3.717855797502882*^9}},ExpressionUUID->"272ee073-15b9-4b5e-9b0d-\
873dc59de1bf"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.7178558095416393`*^9, 3.717855844253154*^9, 
  3.718365008634171*^9, 3.718365420379774*^9, 3.718562400487453*^9, 
  3.720024772203045*^9},ExpressionUUID->"a136b6c6-8dcd-43be-a9c2-\
122103dc479b"]
}, Open  ]],

Cell["\<\
In addition to entering standard Wolfram Language commands to be evaluated in \
the system, other forms of input allow Mathematica to interface with Wolfram \
| Alpha technology by prepending code input with equal signs : \
\>", "Text",
 CellChangeTimes->{{3.720024751056923*^9, 3.720024753696896*^9}, {
  3.720024790001886*^9, 3.72002481476188*^9}, {3.720024849485052*^9, 
  3.720024883111446*^9}},ExpressionUUID->"2e41a1c2-6a0b-407b-a736-\
477d5f7d1a29"],

Cell[CellGroupData[{

Cell["\<\
A single equal sign followed by code, =code. The equal sign becomes an orange \
square equal sign and evaluation returns the result and Mathematica syntax.\
\>", "Item",
 CellChangeTimes->{{3.7200248954778357`*^9, 
  3.720024911469486*^9}},ExpressionUUID->"43798866-8917-468e-a728-\
b5b368d5f597"],

Cell["\<\
a double equal sign followed by code, ==code. : returns the Wolfram|Alpha \
results.\
\>", "Item",
 CellChangeTimes->{{3.7200248954778357`*^9, 
  3.720024931570538*^9}},ExpressionUUID->"adc15831-829f-4080-9bb6-\
b385e1d1fbb9"],

Cell["\<\
control and an equal sign followed by code, Ctrl+=code : inserts a free-form \
input Mathematica expression that can be used further.\
\>", "Item",
 CellChangeTimes->{{3.7200248954778357`*^9, 
  3.720024951506386*^9}},ExpressionUUID->"3fa9b1fc-c73f-45e4-b82c-\
fc18b1feacba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wolfram Language", "WolframAlphaLong",
 CellChangeTimes->{{3.718365065688506*^9, 3.7183651231147127`*^9}, {
  3.718365153841427*^9, 
  3.718365180962597*^9}},ExpressionUUID->"acb82f59-2055-446a-b438-\
57c131615126"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Wolfram Language", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox["\"Wolfram Language\"", Identity], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Data", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            InterpretationBox[
             Cell[
             "Designed for the new generation of programmers, the Wolfram \
Language has a vast depth of built\[Hyphen]in algorithms and knowledge, all \
automatically accessible through its elegant unified symbolic language. \
Scalable for programs from tiny to huge, with immediate deployment locally \
and in the cloud, the Wolfram Language builds on clear principles \[LongDash] \
and 25+ years of development \[LongDash] to create what promises to be the \
world's most productive programming language."], 
             TextCell[
             "Designed for the new generation of programmers, the Wolfram \
Language has a vast depth of built\[Hyphen]in algorithms and knowledge, all \
automatically accessible through its elegant unified symbolic language. \
Scalable for programs from tiny to huge, with immediate deployment locally \
and in the cloud, the Wolfram Language builds on clear principles \[LongDash] \
and 25+ years of development \[LongDash] to create what promises to be the \
world's most productive programming language."]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "MultiClash", "word" -> "", "template" -> 
        "Assuming ${word1} is referring to ${desc1}. Use as ${desc2} instead. \
Use as ${desc3} instead. Use as ${desc4} instead. Use \"${word5}\" as \
${desc5}.", "count" -> "5"}, {
        XMLElement[
        "value", {
         "name" -> "Miscellaneous", "word" -> "the input", "desc" -> 
          "a phrase", "input" -> "*MC.%7E-_*Miscellaneous-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "ExamplePage", "word" -> "the input", "desc" -> 
          "a general topic", "input" -> "*MC.%7E-_*ExamplePage-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "ProgrammingLanguage", "word" -> "the input", "desc" -> 
          "a programming language", "input" -> 
          "*MC.%7E-_*ProgrammingLanguage-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "WordData", "word" -> "the input", "desc" -> 
          " referring to English words", "input" -> 
          "*MC.%7E-_*WordData-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "GivenName", "word" -> "Wolfram", "desc" -> "a given name",
           "input" -> "*MC.%7E-_*GivenName-"}, {}]}]}]}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.55", 
    "parsetiming" -> "0.307", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa37601dii9aahd6ida72h00001264ffc163adgaig", "host" -> 
    "http://www4b.wolframalpha.com", "server" -> "23", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa37611dii9aahd6ida72h000033eii42ad2g67bc65181386928986290122", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2018, 3, 13, 19, 40, 32.022323`8.258027814245228}, "Line" -> 1,
     "SessionID" -> 15920898660014334325}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Wolfram Language"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{736., {161., 167.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.729973232182111*^9},ExpressionUUID->"81c46f6f-2579-4841-a385-\
0ed9d3e197c4"]
}, Open  ]],

Cell["Type = in an input cell:", "Item",
 CellChangeTimes->{{3.718532043180109*^9, 3.7185320565865927`*^9}, {
  3.718534153860026*^9, 3.7185341568073997`*^9}, {3.7185342284362288`*^9, 
  3.718534242701015*^9}},ExpressionUUID->"09adf76a-987d-40d1-9ac8-\
e105be0f1afa"],

Cell["", "WolframAlphaShort",
 CellChangeTimes->{
  3.7185320577907867`*^9},ExpressionUUID->"bb6e1655-3b73-4887-9456-\
1199e34faeb1"],

Cell["Type == in an input cell:", "Item",
 CellChangeTimes->{{3.7185320635057*^9, 3.718532063730674*^9}, {
  3.718534150789071*^9, 3.718534160689251*^9}, {3.718534245221352*^9, 
  3.718534250924789*^9}},ExpressionUUID->"1a18b631-8a27-4ee6-b9fb-\
e65d2ccf3513"],

Cell["", "WolframAlphaLong",
 CellChangeTimes->{
  3.7185320598603354`*^9},ExpressionUUID->"4a03dff9-161d-46d6-95f5-\
68754ff02a80"],

Cell["Type Control+ = in an input cell:", "Item",
 CellChangeTimes->{{3.718534116105916*^9, 3.7185341315298843`*^9}, {
  3.718534253388563*^9, 
  3.718534259463677*^9}},ExpressionUUID->"103c3c10-95ee-4bdf-a773-\
a55310dc4fb1"],

Cell[BoxData[
 NamespaceBox["LinguisticAssistant",
  DynamicModuleBox[{Typeset`query$$ = "", Typeset`boxes$$ = "None", 
   Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
   Typeset`open$$ = {1}, Typeset`querystate$$ = {
   "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
    0.416557`6.07121943043138, "Messages" -> {}}}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
      Dynamic[Typeset`query$$], 
      Dynamic[Typeset`boxes$$], 
      Dynamic[Typeset`allassumptions$$], 
      Dynamic[Typeset`assumptions$$], 
      Dynamic[Typeset`open$$], 
      Dynamic[Typeset`querystate$$]], StandardForm],
    ImageSizeCache->{32., {7., 18.}},
    TrackedSymbols:>{
     Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
      Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
   DynamicModuleValues:>{},
   UndoTrackedVariables:>{Typeset`open$$}],
  BaseStyle->{"Deploy"},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Input",
 CellChangeTimes->{{3.718532066137385*^9, 3.718532089555407*^9}, 
   3.718534101846963*^9},ExpressionUUID->"7fbab6cd-a95e-43e8-8730-\
c7bd1df11092"],

Cell["\<\
We can get information regarding DNA bases using Wolfram|Alpha :\
\>", "Text",
 CellChangeTimes->{{3.720024985052216*^9, 
  3.72002499215786*^9}},ExpressionUUID->"356788d9-0554-461e-8101-\
52328fb88564"],

Cell[CellGroupData[{

Cell["dna bases structure diagram", "WolframAlphaLong",
 CellChangeTimes->{{3.717856512742256*^9, 3.717856534564598*^9}, {
  3.718566700809659*^9, 3.7185667026870823`*^9}, {3.729973244833226*^9, 
  3.729973246414892*^9}},ExpressionUUID->"3973a80d-a0be-4d62-91f4-\
eeff513b2c44"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "dna bases structure diagram", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "EntityClass[\"Chemical\", \"DNABases\"][EntityProperty[\"Chemical\", \
\"ColorStructureDiagram\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"deoxyribonucleic acid bases\"", 
                    $CellContext`TagBoxWrapper[
                    "EntityClass" -> {ChemicalData, "DNABases"}]], 
                    Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"structure diagram\""}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               $CellContext`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Data", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"adenine\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ChemicalData, "Adenine"}]], Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> 1, FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    PaneBox[
                    GraphicsBox[{
                    CapForm["Round"], Null, {{
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.08150247797647808], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {
                    467.83000000000004`, 14.97}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.08150247797647808], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {
                    467.83000000000004`, -145.97}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.08150247797647808], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {
                    286.6, -165.5}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.08150247797647808], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {
                    200., -15.5}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.08150247797647808], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {286.6, 
                    134.5}]}, {
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"H\"", FontSize -> Scaled[0.08150247797647808], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {487.09, 
                    73.91}]}, {
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"H\"", FontSize -> Scaled[0.08150247797647808], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {232.91, 
                    165.5}]}, {
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"H\"", FontSize -> Scaled[0.08150247797647808], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {340.3, 
                    165.5}]}}, {{{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{443.89160218936394`, 7.261238836503053}, {
                    420.52, -0.2649999999999997}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{420.52, -0.2649999999999997}, {
                    373.21, -15.5}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{482.5948358709076, -5.3885733812874665`}, {
                    497.01, -25.265}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{497.01, -25.265}, {
                    526.1899999999999, -65.5}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{475.6415280827566, 38.87506049832152}, {
                    477.46000000000004`, 44.44}}], 
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    
                    LineBox[{{477.46000000000004`, 44.44}, {
                    479.27847191724345`, 50.004939501678464`}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{443.89160218936394`, -138.26123883650305`}, {
                    420.52, -130.735}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{420.52, -130.735}, {373.21, -115.5}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{{478.57133587090766`, -122.69342661871252`}, {
                    492.9865, -102.81700000000001`}}, {{
                    486.61833587090763`, -128.52942661871253`}, {
                    501.0335, -108.65299999999999`}}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{492.9865, -102.81700000000001`}, {
                    522.1664999999999, -62.58200000000001}}, {{
                    501.0335, -108.65299999999999`}, {
                    530.2135, -68.41799999999999}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{308.3801364572351, -152.92631540397466`}, {
                    329.905, -140.5}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{329.905, -140.5}, {373.21, -115.5}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{{262.320492227436, -157.25522645925867`}, {
                    240.8, -144.83}}, {{
                    267.320492227436, -148.59522645925864`}, {
                    245.8, -136.17}}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{240.8, -144.83}, {197.5, -119.83}}, {{
                    245.8, -136.17}, {202.5, -111.17}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{{219.27950777256405`, 1.4047735407413597`}, {
                    240.8, 13.830000000000002`}}, {{
                    224.27950777256405`, -7.255226459258644}, {245.8, 
                    5.169999999999999}}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{240.8, 13.830000000000002`}, {284.1, 
                    38.83}}, {{245.8, 5.169999999999999}, {289.1, 
                    30.169999999999998`}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    LineBox[{{200., -40.6489937853606}, {200., -65.5}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{200., -65.5}, {200., -115.5}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    LineBox[{{286.6, 109.3510062146394}, {286.6, 84.5}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{286.6, 84.5}, {286.6, 34.5}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{264.82069506378826`, 147.07512484676036`}, {
                    259.755, 150.}}], 
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    
                    LineBox[{{259.755, 150.}, {254.68930493621173`, 
                    152.92487515323964`}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{308.3803189480004, 147.07336848022368`}, {
                    313.45000000000005`, 150.}}], 
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    
                    LineBox[{{313.45000000000005`, 150.}, {
                    318.51968105199967`, 152.92663151977632`}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{378.21, -15.5}, {378.21, -65.5}}, {{
                    368.21, -15.5}, {368.21, -65.5}}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{378.21, -65.5}, {378.21, -115.5}}, {{
                    368.21, -65.5}, {368.21, -115.5}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{373.21, -15.5}, {329.905, 9.5}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{329.905, 9.5}, {286.6, 34.5}}]}}}, Null}, {
                    GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, ImageSize -> 121, 
                    PlotRangeClipping -> False, ImagePadding -> 2, ImageSize -> 
                    110.42609038951471`, 
                    PlotRange -> {{176.75116101689161`, 
                    535.9757}, {-193.68041088861622`, 186.63530816646218`}}}],
                     ImageSizeAction -> "ShrinkToFit", 
                    ImageSize -> {{440.}, Automatic}]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"guanine\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ChemicalData, "Guanine"}]], Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> 1, FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    PaneBox[
                    GraphicsBox[{
                    CapForm["Round"], Null, {{
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.06853088961318425], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {104.61, 
                    41.32}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.06853088961318425], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {
                    33.22, -82.52000000000001}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.06853088961318425], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], 
                    TraditionalForm], {-116.72, -66.64}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.06853088961318425], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {-116.72, 
                    66.82000000000001}]}, {
                    RGBColor[0.800498, 0.201504, 0.192061], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"O\"", FontSize -> Scaled[0.06853088961318425], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {33.22, 
                    165.01999999999998`}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.06853088961318425], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {
                    176.29, -82.52000000000001}]}, {
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"H\"", FontSize -> Scaled[0.06853088961318425], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], 
                    TraditionalForm], {-142.19, -145.11}]}, {
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"H\"", FontSize -> Scaled[0.06853088961318425], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {
                    247.73999999999998`, -41.27}]}, {
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"H\"", FontSize -> Scaled[0.06853088961318425], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {
                    176.29999999999998`, -165.01999999999998`}]}, {
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"H\"", FontSize -> Scaled[0.06853088961318425], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {176.06, 
                    82.57}]}}, {{{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{104.61, 14.869999999999997`}, {104.61, 
                    0.08500000000000085}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{104.61, 0.08500000000000085}, {
                    104.61, -41.15}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    LineBox[{{81.70542936602926, 54.54811944584134}, {
                    68.91499999999999, 61.935}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{68.91499999999999, 61.935}, {33.22, 
                    82.55}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{127.51660469450536`, 54.54459683202723}, {
                    140.335, 61.94499999999999}}], 
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    
                    LineBox[{{140.335, 61.94499999999999}, {
                    153.15339530549466`, 69.34540316797275}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{106.6785, -44.7195}, {
                    70.98349999999999, -65.40450000000001}}, {{
                    102.5415, -37.5805}, {
                    66.84649999999999, -58.26550000000001}}}], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{{70.98349999999999, -65.40450000000001}, {
                    58.17360965602482, -72.82774083947687}}, {{
                    66.84649999999999, -58.26550000000001}, {
                    54.03660965602482, -65.68874083947686}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{104.61, -41.15}, {140.45, -61.83500000000001}}], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{140.45, -61.83500000000001}, {
                    153.38162623936313`, -69.29846787838245}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{
                    10.322028761664527`, -69.28046023578004}, \
{-2.5549999999999997`, -61.83500000000001}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{-2.5549999999999997`, -61.83500000000001}, \
{-38.33, -41.15}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{-42.4535, -41.15}, {-42.4535, 
                    0.08500000000000085}}, {{-34.2065, -41.15}, {-34.2065, 
                    0.08500000000000085}}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{-42.4535, 0.08500000000000085}, {-42.4535, 
                    41.32}}, {{-34.2065, 0.08500000000000085}, {-34.2065, 
                    41.32}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{-38.33, -41.15}, {-77.525, \
-53.894999999999996`}}], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{-77.525, -53.894999999999996`}, \
{-91.56639894829127, -58.460828028982576`}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{-38.33, 41.32}, {-2.5549999999999997`, 
                    61.935}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{-2.5549999999999997`, 61.935}, {33.22, 
                    82.55}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{-38.33, 41.32}, {-77.525, 54.07000000000001}}], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{-77.525, 54.07000000000001}, {-91.5673427014057,
                     58.63792625189241}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{29.0965, 82.55}, {29.0965, 123.785}}, {{
                    37.3435, 82.55}, {37.3435, 123.785}}}], 
                    RGBColor[0.800498, 0.201504, 0.192061], 
                    
                    LineBox[{{{29.0965, 123.785}, {29.0965, 
                    138.37499999999997`}}, {{37.3435, 123.785}, {37.3435, 
                    138.37499999999997`}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{-132.2763788430206, -45.24837600151824}, \
{-140.98000000000002`, -33.28}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{-140.98000000000002`, -33.28}, {-165.24, 
                    0.08}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{-124.88582928508768`, -91.79793576760233}, \
{-129.45499999999998`, -105.875}}], 
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    
                    LineBox[{{-129.45499999999998`, -105.875}, \
{-134.02417071491232`, -119.95206423239769`}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{-168.577, 2.5060000000000007`}, {-144.317, 
                    35.876000000000005`}}, {{-161.90300000000002`, \
-2.3460000000000005`}, {-137.64300000000003`, 31.024}}}], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{{-144.317, 
                    35.876000000000005`}, {-135.610329150939, 
                    47.85215854217502}}, {{-137.64300000000003`, 
                    31.024}, {-128.936329150939, 43.00015854217502}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{199.19660469450537`, -69.29540316797276}, {
                    212.015, -61.89500000000001}}], 
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    
                    LineBox[{{212.015, -61.89500000000001}, {
                    224.8333953054946, -54.49459683202725}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{176.2932060605825, -108.9699998056933}, {
                    176.295, -123.77}}], 
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    
                    LineBox[{{176.295, -123.77}, {
                    176.29679393941748`, -138.5700001943067}}]}}}, Null}, {
                    GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, ImageSize -> 144, 
                    PlotRangeClipping -> False, ImagePadding -> 2, ImageSize -> 
                    131.32764000000003`, 
                    PlotRange -> {{-177.6294, 
                    267.53999999999996`}, {-195.01999999999998`, 
                    187.51999999999998`}}}], ImageSizeAction -> "ShrinkToFit",
                     ImageSize -> {{440.}, Automatic}]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"thymine\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ChemicalData, "Thymine"}]], Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> 1, FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    PaneBox[
                    GraphicsBox[{
                    CapForm["Round"], Null, {{
                    RGBColor[0.800498, 0.201504, 0.192061], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"O\"", FontSize -> Scaled[0.07674516697308796], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {
                    546.41, -69.}]}, {
                    RGBColor[0.800498, 0.201504, 0.192061], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"O\"", FontSize -> Scaled[0.07674516697308796], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {200., -69.}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.07674516697308796], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {
                    373.21, -69.}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.07674516697308796], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {286.6, 81.}]}, {
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"H\"", FontSize -> Scaled[0.07674516697308796], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {
                    373.21, -131.}]}, {
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"H\"", FontSize -> Scaled[0.07674516697308796], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {232.91, 
                    112.00000000000001`}]}}, {{{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.800498, 0.201504, 0.192061], 
                    LineBox[{{{521.971861204623, -60.66363810890476}, {
                    500.60999999999996`, -48.33}}, {{
                    526.971861204623, -52.00363810890477}, {
                    505.60999999999996`, -39.67}}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{500.60999999999996`, -48.33}, {
                    457.30999999999995`, -23.330000000000002`}}, {{
                    505.60999999999996`, -39.67}, {
                    462.30999999999995`, -14.669999999999998`}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.800498, 0.201504, 0.192061], 
                    
                    LineBox[{{{219.43813879537697`, -52.00363810890477}, {
                    240.8, -39.67}}, {{
                    224.43813879537697`, -60.66363810890476}, {
                    245.8, -48.33}}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{240.8, -39.67}, {
                    284.1, -14.669999999999998`}}, {{245.8, -48.33}, {
                    289.1, -23.330000000000002`}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{394.989507772564, -56.42522645925864}, {
                    416.51, -44.}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{416.51, -44.}, {
                    459.80999999999995`, -19.}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{351.4298635427649, -56.426315403974655`}, {
                    329.905, -44.}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{329.905, -44.}, {286.6, -19.}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    LineBox[{{373.21, -94.14899378536062}, {373.21, -100.}}], 
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    
                    LineBox[{{373.21, -100.}, {
                    373.21, -105.85100621463938`}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{308.3801364572351, 93.57368459602536}, {329.905,
                     106.}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{329.905, 106.}, {373.21, 131.}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    LineBox[{{286.6, 55.85100621463938}, {286.6, 31.}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{286.6, 31.}, {286.6, -19.}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{264.82069506378826`, 93.57512484676036}, {
                    259.755, 96.5}}], 
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    
                    LineBox[{{259.755, 96.5}, {254.68930493621173`, 
                    99.42487515323964}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{459.80999999999995`, 81.}, {459.80999999999995`,
                     31.}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{459.80999999999995`, 31.}, {
                    459.80999999999995`, -19.}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{457.30999999999995`, 76.67}, {414.01, 
                    101.67}}, {{462.30999999999995`, 85.33}, {419.01, 
                    110.33}}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{414.01, 101.67}, {370.71, 126.67}}, {{419.01, 
                    110.33}, {375.71, 135.32999999999998`}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{459.80999999999995`, 81.}, {503.10999999999996`,
                     106.}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{503.10999999999996`, 106.}, {546.41, 131.}}]}}},
                     Null}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, ImageSize -> 129, 
                    PlotRangeClipping -> False, ImagePadding -> 2, ImageSize -> 
                    117.27122833879568`, 
                    PlotRange -> {{176.53980793522697`, 
                    565.1781536518184}, {-159.18041088861622`, 138.86}}}], 
                    ImageSizeAction -> "ShrinkToFit", 
                    ImageSize -> {{440.}, Automatic}]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"cytosine\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ChemicalData, "Cytosine"}]], Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> 1, FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    PaneBox[
                    GraphicsBox[{
                    CapForm["Round"], Null, {{
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.13190048372304064`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {71.35, 
                    23.61}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.13190048372304064`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], 
                    TraditionalForm], {-0.03, -100.21}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"N\"", FontSize -> Scaled[0.13190048372304064`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {-0.03, 
                    141.46}]}, {
                    RGBColor[0.800498, 0.201504, 0.192061], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"O\"", FontSize -> Scaled[0.13190048372304064`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {
                    143.02, -100.21}]}, {
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"H\"", FontSize -> Scaled[0.13190048372304064`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {
                    0.01, -182.71}]}, {
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"H\"", FontSize -> Scaled[0.13190048372304064`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {-71.47, 
                    182.71}]}, {
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"H\"", FontSize -> Scaled[0.13190048372304064`], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], {71.42, 
                    182.71}]}}, {{{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{71.35, -2.8400000000000034`}, {
                    71.35, -17.615000000000002`}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{71.35, -17.615000000000002`}, {
                    71.35, -58.84}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{{46.38384227841242, 33.268102847910335`}, {
                    33.599, 40.650999999999996`}}, {{50.50584227841243, 
                    40.40610284791033}, {37.721, 47.789}}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{33.599, 
                    40.650999999999996`}, {-2.0909999999999997`, 
                    61.260999999999996`}}, {{37.721, 47.789}, {2.031, 
                    68.399}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{71.35, -58.84}, {35.66, -79.525}}], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{35.66, -79.525}, {
                    22.85430365637879, -86.94685006634364}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{73.4185, -55.2565}, {109.2535, -75.9415}}, {{
                    69.2815, -62.423500000000004`}, {105.1165, -83.1085}}}], 
                    RGBColor[0.800498, 0.201504, 0.192061], 
                    
                    LineBox[{{{109.2535, -75.9415}, {
                    122.01204110264455`, -83.30609948955497}}, {{
                    105.1165, -83.1085}, {
                    117.87504110264454`, -90.47309948955497}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{-22.925564616891762`, -86.96629882269558}, \
{-35.79, -79.525}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{-35.79, -79.525}, {-71.55, -58.84}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{-0.017175759083106285`, -126.65999689109329`}, \
{-0.009999999999999998, -141.46}}], 
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    
                    LineBox[{{-0.009999999999999998, -141.46}, \
{-0.002824240916893716, -156.26000310890672`}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{-75.6725, -58.84}, {-75.6725, \
-17.615000000000002`}}, {{-67.4275, -58.84}, {-67.4275, \
-17.615000000000002`}}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    
                    LineBox[{{{-75.6725, -17.615000000000002`}, {-75.6725, 
                    23.61}}, {{-67.4275, -17.615000000000002`}, {-67.4275, 
                    23.61}}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{-71.55, 23.61}, {-35.79, 44.22}}], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{-35.79, 44.22}, {-0.03, 64.83}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.4, 0.4, 0.4], 
                    LineBox[{{-0.03, 64.83}, {-0.03, 103.14500000000001`}}], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{-0.03, 103.14500000000001`}, {-0.03, 
                    115.01}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{-22.935803126446892`, 
                    154.68598514789943`}, {-35.75, 162.085}}], 
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    
                    LineBox[{{-35.75, 162.085}, {-48.56419687355311, 
                    169.4840148521006}}]}}, {{
                    AbsoluteThickness[0.55], 
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    LineBox[{{22.876604694505364`, 154.68459683202724`}, {
                    35.695, 162.085}}], 
                    RGBColor[
                    0.43333333333333335`, 0.4666666666666667, 
                    0.4666666666666667], 
                    
                    LineBox[{{35.695, 162.085}, {48.51339530549464, 
                    169.48540316797278`}}]}}}, Null}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, ImageSize -> 90, 
                    PlotRangeClipping -> False, ImagePadding -> 2, ImageSize -> 
                    81.879912, 
                    PlotRange -> {{-96.22, 163.}, {-212.71, 205.21}}}], 
                    ImageSizeAction -> "ShrinkToFit", 
                    ImageSize -> {{440.}, Automatic}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "structure diagram", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "ChemicalProperty", "desc" -> 
          " referring to chemical compounds", "input" -> 
          "*C.structure+diagram-_*ChemicalProperty-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "ChemicalPropertyClass", "desc" -> 
          " referring to chemical compounds", "input" -> 
          "*C.structure+diagram-_*ChemicalPropertyClass-"}, {}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
ChemicalDataSourceInformationNotes.html", "text" -> "Chemical data"}, {}]}]}, 
   Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "Chemical", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.125", 
    "parsetiming" -> "0.389", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa36131f64i6d0099fbdii00004075f32i8efge629", "host" -> 
    "http://www4b.wolframalpha.com", "server" -> "48", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa36141f64i6d0099fbdii0000228b568gcg66i8b01636597433810948718", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2018, 3, 13, 19, 40, 49.239065`8.444884773320055}, "Line" -> 3,
     "SessionID" -> 15920898660014334325}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "dna bases structure diagram"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{736., {374., 380.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.729973249303585*^9},ExpressionUUID->"114a6bb5-9be5-40d5-862c-\
a29f30c7ca3b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Additional examples not in the manuscript", "Section",
 CellChangeTimes->{{3.722604783453895*^9, 
  3.722604791147781*^9}},ExpressionUUID->"d2094de9-c00e-4ffc-9474-\
3fac2b95c5be"],

Cell[CellGroupData[{

Cell["Genome Human", "WolframAlphaLong",
 CellChangeTimes->{{3.714407846706355*^9, 
  3.714407874342742*^9}},ExpressionUUID->"c255643c-34e1-4098-810b-\
25b793a730ec"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Genome Human", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"human\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {SpeciesData, "Species:HomoSapiens"}]], 
                    Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"genome information\""}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               $CellContext`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Data", "id" -> 
     "GenomeSummary:SpeciesData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"total base pairs\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["3082436951", Identity]}, {
                 TagBox[
                  PaneBox[
                  "\"total chromosomes\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "24"}, {
                 TagBox[
                  PaneBox[
                  "\"known genes\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["33565", Identity]}, {
                 TagBox[
                  PaneBox[
                  "\"known RNAs\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["3564", Identity]}, {
                 TagBox[
                  PaneBox[
                  "\"known proteins\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["30870", Identity]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show details", "input" -> 
         "GenomeSummary:SpeciesData__Show details"}, {}]}]}], Typeset`aux1$$ =
    {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "MultiClash", "word" -> "", "template" -> 
        "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "Species", "word" -> "Human", "desc" -> 
          "a species specification", "input" -> "*MC.%7E-_*Species-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "ExamplePage", "word" -> "", "desc" -> "a general topic", 
          "input" -> "*MC.%7E-_*ExamplePage-"}, {}]}]}], 
    XMLElement["sources", {"count" -> "2"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
GenomeSequenceDataSourceInformationNotes.html", "text" -> 
        "Genome sequence data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
SpeciesDataSourceInformationNotes.html", "text" -> "Species data"}, {}]}]}, 
   Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "Species", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.781", 
    "parsetiming" -> "0.212", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa4581g38g1c8heg406hc000039ci63chf8a27gb8", "host" -> 
    "http://www4b.wolframalpha.com", "server" -> "43", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa4591g38g1c8heg406hc000023a5ccbi0b8i80bg2376725253226070752", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2018, 3, 13, 19, 40, 54.618328`8.489913375627022}, "Line" -> 4,
     "SessionID" -> 15920898660014334325}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Genome Human"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{736., {176., 182.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.729973254682303*^9},ExpressionUUID->"00d772a4-2790-44e4-8ef2-\
4b89016c0f81"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mouse Genome", "WolframAlphaLong",
 CellChangeTimes->{{3.7178671124689198`*^9, 
  3.717867137606914*^9}},ExpressionUUID->"dcdcf326-1f78-4189-82a9-\
92363f23812a"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Mouse Genome", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "MultiClash", "word" -> "", "template" -> 
        "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "ExamplePage", "word" -> "the input", "desc" -> 
          "a general topic", "input" -> "*MC.%7E-_*ExamplePage-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Species", "word" -> "Mouse", "desc" -> 
          "a species specification", "input" -> 
          "*MC.%7E-_*Species-"}, {}]}]}], 
    XMLElement[
    "examplepage", {
     "category" -> "MouseGenome", "url" -> 
      "http://www.wolframalpha.com/examples/MouseGenome-content.html"}, {}]}, 
   Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "false", "error" -> "false", "numpods" -> "0", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.523", 
    "parsetiming" -> "0.12", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "MSPa211712c44b16588298d700001i2h7dhg7hd030gf", "host" -> 
    "http://www4b.wolframalpha.com", "server" -> "33", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2018, 3, 13, 19, 40, 59.275121`8.525447422256406}, "Line" -> 5,
     "SessionID" -> 15920898660014334325}, Typeset`showpods$$ = {}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Mouse Genome"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {}, {}, Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, 
        Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{736., {221., 227.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.729973259351985*^9},ExpressionUUID->"963938c8-8e72-4deb-a35d-\
68f9e8db810a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Uracil", "WolframAlphaLong",
 CellChangeTimes->{{3.717782746969816*^9, 3.7177828105807323`*^9}, {
  3.717867149230013*^9, 
  3.717867164393306*^9}},ExpressionUUID->"adc9b8c8-1211-4085-857c-\
d17da5a680c6"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Uracil", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"Chemical\", \"Uracil\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox["\"uracil\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {ChemicalData, "Uracil"}]], Identity], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Chemical names and formulas", "scanner" -> "Data", 
     "id" -> "ChemicalNamesFormulas:ChemicalData", "position" -> "200", 
     "error" -> "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"formula\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    SubscriptBox["\"C\"", "4"], 
                    SubscriptBox["\"H\"", "4"], 
                    SubscriptBox["\"N\"", "2"], 
                    SubscriptBox["\"O\"", "2"]}, "RowDefault"], 
                  ScriptBaselineShifts -> {0.5, 0.75}, StripOnInput -> 
                  False]}, {
                 TagBox[
                  PaneBox[
                  "\"name\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"uracil\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"IUPAC name\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"1H-pyrimidine-2,4-dione\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ChemicalNamesFormulas:ChemicalData__More"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Basic properties", "scanner" -> "Data", "id" -> 
     "Basic:ChemicalData", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Chemical\", \"Uracil\"], \
{EntityProperty[\"Chemical\", \"MolarMass\"], EntityProperty[\"Chemical\", \
\"Phase\"], EntityProperty[\"Chemical\", \"MeltingPoint\"], \
EntityProperty[\"Chemical\", \"BoilingPoint\"], EntityProperty[\"Chemical\", \
\"Density\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"molar mass\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["112.09", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "112.09"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{
                    "\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"phase\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    FormBox[
                    TagBox[
                    TagBox["\"solid\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Solid"}]], Identity], 
                    TraditionalForm], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"at STP\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"melting point\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["300", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "300"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"boiling point\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["379", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "379"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.99174", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "0.99174"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"solubility in water\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"soluble\""}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "2"}, {
           XMLElement[
           "unit", {
            "short" -> "g/cm^3", "long" -> "grams per cubic centimeter"}, {}], 
           XMLElement[
           "unit", {"short" -> "g/mol", "long" -> "grams per mole"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    
                    RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], 
                    "UnitOnly", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"grams per cubic centimeter\"", {
                    FontSize -> 10, FontFamily -> "Helvetica", FontSize -> 
                    Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    
                    RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], 
                    "UnitOnly", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"grams per mole\"", {
                    FontSize -> 10, FontFamily -> "Helvetica", FontSize -> 
                    Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}}, "Rows" -> {{0.5}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False], TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Hydrophobicity and permeability properties", "scanner" -> 
     "Data", "id" -> "HydrophobicityPermeabilityProperties:ChemicalData", 
     "position" -> "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"predicted LogP hydrophobicity\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["1.19", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.19"]]}]}], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"experimental LogS\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["1.48", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.48"]]}]}], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"predicted LogS\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["0.63", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.63"]]}]}], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox[
                   "\"experimental Caco\[Hyphen]2 permeability\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["5.37", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5.37"]]}]}], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Solid properties (at STP)", "scanner" -> "Data", "id" -> 
     "SolidProperties:ChemicalData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.99174", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "0.99174"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Right}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {
            "short" -> "g/cm^3", "long" -> "grams per cubic centimeter"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    
                    RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], 
                    "UnitOnly", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"grams per cubic centimeter\"", {
                    FontSize -> 10, FontFamily -> "Helvetica", FontSize -> 
                    Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}}, "Rows" -> {{0.5}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False], TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Thermodynamic properties", "scanner" -> "Data", "id" -> 
     "Thermodynamics:ChemicalData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TemplateBox[{"\"specific heat capacity \"", 
                    SubscriptBox["c", "p"]}, "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"solid\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Solid"}]], Identity], 
                    TraditionalForm], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.075", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "1.075"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"J\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    
                    RowBox[{"\"(\"", "\[InvisibleSpace]", "\"g\"", 
                    "\[InvisibleSpace]", "\"\[ThinSpace]\"", 
                    "\[InvisibleSpace]", "\"K\"", "\[InvisibleSpace]", 
                    "\")\""}]}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TemplateBox[{"\"specific heat of formation \"", 
                    SubscriptBox["\"\[CapitalDelta]\"", "f"], "H", 
                    "\"\[Degree]\""}, "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"gas\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Gas"}]], Identity], 
                    TraditionalForm], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["2.702", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "2.702"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"solid\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Solid"}]], Identity], 
                    TraditionalForm], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["3.831", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "3.831"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"at STP\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "Thermodynamics:ChemicalData__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "2"}, {
           XMLElement[
           "unit", {
            "short" -> "J/(g K)", "long" -> 
             "joules per gram kelvin difference"}, {}], 
           XMLElement[
           "unit", {"short" -> "kJ/g", "long" -> "kilojoules per gram"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    
                    RowBox[{"\"J\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    
                    RowBox[{"\"(\"", "\[InvisibleSpace]", "\"g\"", 
                    "\[InvisibleSpace]", "\"\[ThinSpace]\"", 
                    "\[InvisibleSpace]", "\"K\"", "\[InvisibleSpace]", 
                    "\")\""}]}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], "UnitOnly", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"joules per gram kelvin difference\"", {
                    FontSize -> 10, FontFamily -> "Helvetica", FontSize -> 
                    Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], "UnitOnly", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"kilojoules per gram\"", {
                    FontSize -> 10, FontFamily -> "Helvetica", FontSize -> 
                    Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}}, "Rows" -> {{0.5}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False], TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Chemical identifiers", "scanner" -> "Data", "id" -> 
     "ChemicalIdentifiers:ChemicalData", "position" -> "700", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Chemical\", \"Uracil\"], \
{EntityProperty[\"Chemical\", \"CASNumber\"], EntityProperty[\"Chemical\", \
\"BeilsteinNumber\"], EntityProperty[\"Chemical\", \"CIDNumber\"], \
EntityProperty[\"Chemical\", \"SMILES\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"CAS number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"66-22-8\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"Beilstein number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"507828\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"PubChem CID number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"1174\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"PubChem SID number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"3406\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"SMILES identifier\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"C1=CNC(=O)NC1=O\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ChemicalIdentifiers:ChemicalData__More"}, {}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"title" -> "Toxicity properties", "scanner" -> "Data", "id" -> 
     "ToxicityProperties:ChemicalData", "position" -> "800", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Chemical\", \"Uracil\"], \
{EntityProperty[\"Chemical\", \"RTECSClasses\"]}, \
\"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"RTECS classes\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\"tumorigen\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], "\"mutagen\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"reproductive effector\""}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "2"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "Uracil", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "Chemical", "desc" -> "a chemical compound", "input" -> 
          "*C.Uracil-_*Chemical-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "*C.Uracil-_*Word-"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "SubCategory", "word" -> "Uracil", "template" -> 
        "Assuming ${desc1}. Use ${desc2} instead", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "Uracil", "desc" -> "uracil", "input" -> 
          "*DPClash.ChemicalE.Uracil-_*Uracil-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Uridine", "desc" -> "uridine", "input" -> 
          "*DPClash.ChemicalE.Uracil-_*Uridine-"}, {}]}]}], 
    XMLElement["sources", {"count" -> "2"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
ChemicalDataSourceInformationNotes.html", "text" -> "Chemical data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
ElementDataSourceInformationNotes.html", "text" -> "Element data"}, {}]}]}, 
   Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "8", "datatypes" -> 
    "Chemical,MatterPhase", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "3.331", "parsetiming" -> "0.122", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSPa35661cfe25h0d5fe1a7e000026229i2a73687da3", "host" -> 
    "http://www4b.wolframalpha.com", "server" -> "25", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa35671cfe25h0d5fe1a7e00003c61ddb90ia7853h2546337270794351225", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2018, 3, 13, 19, 41, 27.532333`8.192417995444567}, "Line" -> 7,
     "SessionID" -> 15920898660014334325}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7, 8}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "Uracil"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{850., {638., 644.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7299732876274023`*^9},ExpressionUUID->"9e643f09-5550-4628-b12a-\
fa21598e0ecc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GenomeData", "[", 
   RowBox[{"\"\<JUN\>\"", ",", "\"\<FullSequence\>\""}], "]"}], "//", 
  "Short"}]], "Input",
 CellChangeTimes->{{3.71778285241072*^9, 3.717782852881826*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"ffff4d8d-4bd5-4758-8dc7-4bba0ad26bca"],

Cell[BoxData[
 TagBox[
  RowBox[{"\<\"GACATCATGGGCTATTTTTAGGGGTTGACTGGTAGCAGATA\"\>", 
   "\[Ellipsis]", "\<\"ATAACAGCATTCTTGTCACAATAAATGTATTCAAATACCAA\"\>"}],
  Short]], "Output",
 CellChangeTimes->{3.717782858367133*^9, 3.7178671898316193`*^9, 
  3.7299732972416983`*^9},
 CellLabel->
  "Out[8]//Short=",ExpressionUUID->"e3328147-e927-4268-b24c-67f4b0d81d7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chromosome 1", "WolframAlphaLong",
 CellChangeTimes->{{3.7178673603310747`*^9, 3.717867391240594*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b6fbaee0-319a-49c3-9c04-b9e570826a29"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Chromosome 1", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"GenomeData[\"Chromosome1\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox[
                StyleBox[
                 TemplateBox[{"\"chromosome 1\"", "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"human\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                 0], 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`GenomeSequenceData, {
                   "Chromosome1", {"Species" -> "HomoSapiens"}}}]], Identity],
               TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Reference sequence length", "scanner" -> "Data", "id" -> 
     "ChromosomeLength:GenomeSequenceData", "position" -> "200", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["249.3", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "249.3"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Mbp\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"megabase pairs\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Helvetica", FontSize -> Smaller, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Idiogram", "scanner" -> "Data", "id" -> 
     "ChromosomeIdiogram:GenomeSequenceData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GrayLevel[1], 
                EdgeForm[{
                  GrayLevel[0], 
                  Thickness[0.0015]}], 
                
                PolygonBox[{{{0.006622516556291391, 0}, {
                   0.005555555555555555, 0}, {0.005555555555555554, 0.}, {
                   0.004590843457405942, 0.00008440137215439975}, {
                   0.00365544364819073, 0.00033504099563384186`}, {
                   0.002777777777777775, 0.0007443033123086754}, {
                   0.001984513279519225, 0.0012997530937834557`}, {
                   0.0012997530937834557`, 0.001984513279519226}, {
                   0.0007443033123086746, 0.002777777777777777}, {
                   0.00033504099563384186`, 0.003655443648190729}, {
                   0.00008440137215439888, 0.004590843457405944}, {0., 
                   0.005555555555555556}, {0., 0.005555555555555555}, {0., 
                   0.016666666666666663`}, {0., 0.016666666666666663`}, {
                   0.00008440137215439975, 0.017631378764816276`}, {
                   0.0003350409956338427, 0.018566778574031488`}, {
                   0.0007443033123086737, 0.01944444444444444}, {
                   0.0012997530937834557`, 0.020237708942702992`}, {
                   0.0019845132795192257`, 0.020922469128438762`}, {
                   0.002777777777777776, 0.021477918909913542`}, {
                   0.003655443648190729, 0.021887181226588375`}, {
                   0.004590843457405942, 0.022137820850067817`}, {
                   0.005555555555555555, 0.02222222222222222}, {
                   0.005555555555555555, 0.02222222222222222}, {
                   0.006622516556291391, 0.02222222222222222}, {
                   0.006622516556291391, 0}}, {{0.006622516556291391, 0}, {
                   0.006622516556291391, 0.02222222222222222}, {
                   0.016158940397350992`, 0.02222222222222222}, {
                   0.016158940397350992`, 0}, {0.006622516556291391, 0}}, {{
                   0.016158940397350992`, 0}, {0.016158940397350992`, 
                   0.02222222222222222}, {0.022781456953642386`, 
                   0.02222222222222222}, {0.022781456953642386`, 0}, {
                   0.016158940397350992`, 0}}, {{0.022781456953642386`, 0}, {
                   0.022781456953642386`, 0.02222222222222222}, {
                   0.030397350993377485`, 0.02222222222222222}, {
                   0.030397350993377485`, 0}, {0.022781456953642386`, 0}}, {{
                   0.030397350993377485`, 0}, {0.030397350993377485`, 
                   0.02222222222222222}, {0.04370860927152318, 
                   0.02222222222222222}, {0.04370860927152318, 0}, {
                   0.030397350993377485`, 0}}, {{0.04370860927152318, 0}, {
                   0.04370860927152318, 0.02222222222222222}, {
                   0.057019867549668875`, 0.02222222222222222}, {
                   0.057019867549668875`, 0}, {0.04370860927152318, 0}}, {{
                   0.057019867549668875`, 0}, {0.057019867549668875`, 
                   0.02222222222222222}, {0.07986754966887417, 
                   0.02222222222222222}, {0.07986754966887417, 0}, {
                   0.057019867549668875`, 0}}, {{0.07986754966887417, 0}, {
                   0.07986754966887417, 0.02222222222222222}, {
                   0.08748344370860928, 0.02222222222222222}, {
                   0.08748344370860928, 0}, {0.07986754966887417, 0}}, {{
                   0.08748344370860928, 0}, {0.08748344370860928, 
                   0.02222222222222222}, {0.10072847682119206`, 
                   0.02222222222222222}, {0.10072847682119206`, 0}, {
                   0.08748344370860928, 0}}, {{0.10072847682119206`, 0}, {
                   0.10072847682119206`, 0.02222222222222222}, {
                   0.10933774834437086`, 0.02222222222222222}, {
                   0.10933774834437086`, 0}, {0.10072847682119206`, 0}}, {{
                   0.10933774834437086`, 0}, {0.10933774834437086`, 
                   0.02222222222222222}, {0.11788079470198676`, 
                   0.02222222222222222}, {0.11788079470198676`, 0}, {
                   0.10933774834437086`, 0}}, {{0.11788079470198676`, 0}, {
                   0.11788079470198676`, 0.02222222222222222}, {
                   0.12549668874172185`, 0.02222222222222222}, {
                   0.12549668874172185`, 0}, {0.11788079470198676`, 0}}, {{
                   0.12549668874172185`, 0}, {0.12549668874172185`, 
                   0.02222222222222222}, {0.14635761589403973`, 
                   0.02222222222222222}, {0.14635761589403973`, 0}, {
                   0.12549668874172185`, 0}}, {{0.14635761589403973`, 0}, {
                   0.14635761589403973`, 0.02222222222222222}, {
                   0.15966887417218542`, 0.02222222222222222}, {
                   0.15966887417218542`, 0}, {0.14635761589403973`, 0}}, {{
                   0.15966887417218542`, 0}, {0.15966887417218542`, 
                   0.02222222222222222}, {0.18344370860927153`, 
                   0.02222222222222222}, {0.18344370860927153`, 0}, {
                   0.15966887417218542`, 0}}, {{0.18344370860927153`, 0}, {
                   0.18344370860927153`, 0.02222222222222222}, {
                   0.19774834437086092`, 0.02222222222222222}, {
                   0.19774834437086092`, 0}, {0.18344370860927153`, 0}}, {{
                   0.19774834437086092`, 0}, {0.19774834437086092`, 
                   0.02222222222222222}, {0.21675496688741722`, 
                   0.02222222222222222}, {0.21675496688741722`, 0}, {
                   0.19774834437086092`, 0}}, {{0.21675496688741722`, 0}, {
                   0.21675496688741722`, 0.02222222222222222}, {
                   0.22622516556291392`, 0.02222222222222222}, {
                   0.22622516556291392`, 0}, {0.21675496688741722`, 0}}, {{
                   0.22622516556291392`, 0}, {0.22622516556291392`, 
                   0.02222222222222222}, {0.2471523178807947, 
                   0.02222222222222222}, {0.2471523178807947, 0}, {
                   0.22622516556291392`, 0}}, {{0.2471523178807947, 0}, {
                   0.2471523178807947, 0.02222222222222222}, {
                   0.2633112582781457, 0.02222222222222222}, {
                   0.2633112582781457, 0}, {0.2471523178807947, 0}}, {{
                   0.2633112582781457, 0}, {0.2633112582781457, 
                   0.02222222222222222}, {0.2785430463576159, 
                   0.02222222222222222}, {0.2785430463576159, 0}, {
                   0.2633112582781457, 0}}, {{0.2785430463576159, 0}, {
                   0.2785430463576159, 0.02222222222222222}, {
                   0.3213245033112583, 0.02222222222222222}, {
                   0.3213245033112583, 0}, {0.2785430463576159, 0}}, {{
                   0.3213245033112583, 0}, {0.3213245033112583, 
                   0.02222222222222222}, {0.34503311258278146`, 
                   0.02222222222222222}, {0.34503311258278146`, 0}, {
                   0.3213245033112583, 0}}, {{0.34503311258278146`, 0}, {
                   0.34503311258278146`, 0.02222222222222222}, {
                   0.36026490066225164`, 0.02222222222222222}, {
                   0.36026490066225164`, 0}, {0.34503311258278146`, 0}}, {{
                   0.36026490066225164`, 0}, {0.36026490066225164`, 
                   0.02222222222222222}, {0.38019867549668873`, 
                   0.02222222222222222}, {0.38019867549668873`, 0}, {
                   0.36026490066225164`, 0}}, {{0.38019867549668873`, 0}, {
                   0.38019867549668873`, 0.02222222222222222}, {
                   0.39450331125827814`, 0.02222222222222222}, {
                   0.39450331125827814`, 0}, {0.38019867549668873`, 0}}, {{
                   0.39450331125827814`, 0}, {0.39450331125827814`, 
                   0.02222222222222222}, {0.39927152317880793`, 
                   0.02222222222222222}, {0.39927152317880793`, 0}, {
                   0.39450331125827814`, 0}}, {{0.39927152317880793`, 0}, {
                   0.39927152317880793`, 0.02222222222222222}, {
                   0.4135099337748344, 0.02222222222222222}, {
                   0.4135099337748344, 0}, {0.39927152317880793`, 0}}, {{
                   0.4135099337748344, 0}, {0.4135099337748344, 
                   0.02222222222222222}, {0.4277483443708609, 
                   0.02222222222222222}, {0.4277483443708609, 0}, {
                   0.4135099337748344, 0}}, {{0.4277483443708609, 0}, {
                   0.4277483443708609, 0.02222222222222222}, {
                   0.4410596026490066, 0.02222222222222222}, {
                   0.4410596026490066, 0}, {0.4277483443708609, 0}}, {{
                   0.4410596026490066, 0}, {0.4410596026490066, 
                   0.02222222222222222}, {0.45437086092715234`, 
                   0.02222222222222222}, {0.45437086092715234`, 0}, {
                   0.4410596026490066, 0}}, {{0.45437086092715234`, 0}, {
                   0.45437086092715234`, 0.02222222222222222}, {
                   0.46675496688741724`, 0.02222222222222222}, {
                   0.46675496688741724`, 0}, {0.45437086092715234`, 0}}, {{
                   0.46675496688741724`, 0}, {0.46675496688741724`, 
                   0.02222222222222222}, {0.4714569536423841, 
                   0.02222222222222222}, {0.4714569536423841, 0}, {
                   0.46675496688741724`, 0}}, {{0.4714569536423841, 0}, {
                   0.4714569536423841, 0.02222222222222222}, {
                   0.4746504782928624, 0.02222222222222222}, {
                   0.4746504782928624, 0.02222222222222222}, {
                   0.4765799024891616, 0.022053419477913422`}, {
                   0.47845070210759205`, 0.021552140230954534`}, {
                   0.4802060338484179, 0.020733615597604872`}, {
                   0.48179256284493505`, 0.019622716034655308`}, {
                   0.4831620832164066, 0.018253195663183768`}, {
                   0.48427298277935615`, 0.016666666666666663`}, {
                   0.4850915074127058, 0.014911334925840762`}, {
                   0.4855927866596647, 0.013040535307410336`}, {
                   0.4857615894039735, 0.01111111111111111}, {
                   0.4857615894039735, 0.01111111111111111}, {
                   0.4857615894039735, 0.01111111111111111}, {
                   0.4857615894039735, 0.01111111111111111}, {
                   0.4855927866596647, 0.009181686914811884}, {
                   0.4850915074127058, 0.007310887296381458}, {
                   0.48427298277935615`, 0.005555555555555556}, {
                   0.4831620832164066, 0.003969026559038452}, {
                   0.48179256284493505`, 0.0025995061875669113`}, {
                   0.4802060338484179, 0.0014886066246173491`}, {
                   0.47845070210759205`, 0.0006700819912676854}, {
                   0.4765799024891616, 0.0001688027443087995}, {
                   0.4746504782928624, 0.}, {0.4746504782928624, 0}, {
                   0.4714569536423841, 0}}, {{0.5019205298013245, 0}, {
                   0.49687270051508464`, 0}, {0.49687270051508464`, 0.}, {
                   0.49494327631878543`, 0.0001688027443087995}, {
                   0.493072476700355, 0.0006700819912676837}, {
                   0.4913171449595291, 0.0014886066246173509`}, {
                   0.489730615963012, 0.0025995061875669113`}, {
                   0.48836109559154045`, 0.003969026559038452}, {
                   0.4872501960285909, 0.005555555555555554}, {
                   0.48643167139524124`, 0.007310887296381458}, {
                   0.4859303921482823, 0.009181686914811887}, {
                   0.4857615894039735, 0.011111111111111112`}, {
                   0.4857615894039735, 0.01111111111111111}, {
                   0.4857615894039735, 0.01111111111111111}, {
                   0.4857615894039735, 0.011111111111111112`}, {
                   0.4859303921482823, 0.013040535307410336`}, {
                   0.48643167139524124`, 0.014911334925840763`}, {
                   0.4872501960285909, 0.016666666666666663`}, {
                   0.48836109559154045`, 0.01825319566318377}, {
                   0.489730615963012, 0.019622716034655308`}, {
                   0.4913171449595291, 0.020733615597604872`}, {
                   0.493072476700355, 0.021552140230954538`}, {
                   0.49494327631878543`, 0.022053419477913422`}, {
                   0.49687270051508464`, 0.02222222222222222}, {
                   0.49687270051508464`, 0.02222222222222222}, {
                   0.5019205298013245, 0.02222222222222222}, {
                   0.5019205298013245, 0}}, {{0.5019205298013245, 0}, {
                   0.5019205298013245, 0.02222222222222222}, {
                   0.5617880794701987, 0.02222222222222222}, {
                   0.5617880794701987, 0}, {0.5019205298013245, 0}}, {{
                   0.5617880794701987, 0}, {0.5617880794701987, 
                   0.02222222222222222}, {0.5798675496688742, 
                   0.02222222222222222}, {0.5798675496688742, 0}, {
                   0.5617880794701987, 0}}, {{0.5798675496688742, 0}, {
                   0.5798675496688742, 0.02222222222222222}, {
                   0.5931788079470198, 0.02222222222222222}, {
                   0.5931788079470198, 0}, {0.5798675496688742, 0}}, {{
                   0.5931788079470198, 0}, {0.5931788079470198, 
                   0.02222222222222222}, {0.6121854304635762, 
                   0.02222222222222222}, {0.6121854304635762, 0}, {
                   0.5931788079470198, 0}}, {{0.6121854304635762, 0}, {
                   0.6121854304635762, 0.02222222222222222}, {
                   0.6264238410596027, 0.02222222222222222}, {
                   0.6264238410596027, 0}, {0.6121854304635762, 0}}, {{
                   0.6264238410596027, 0}, {0.6264238410596027, 
                   0.02222222222222222}, {0.6511258278145695, 
                   0.02222222222222222}, {0.6511258278145695, 0}, {
                   0.6264238410596027, 0}}, {{0.6511258278145695, 0}, {
                   0.6511258278145695, 0.02222222222222222}, {
                   0.665430463576159, 0.02222222222222222}, {
                   0.665430463576159, 0}, {0.6511258278145695, 0}}, {{
                   0.665430463576159, 0}, {0.665430463576159, 
                   0.02222222222222222}, {0.685364238410596, 
                   0.02222222222222222}, {0.685364238410596, 0}, {
                   0.665430463576159, 0}}, {{0.685364238410596, 0}, {
                   0.685364238410596, 0.02222222222222222}, {
                   0.6958278145695365, 0.02222222222222222}, {
                   0.6958278145695365, 0}, {0.685364238410596, 0}}, {{
                   0.6958278145695365, 0}, {0.6958278145695365, 
                   0.02222222222222222}, {0.7072185430463576, 
                   0.02222222222222222}, {0.7072185430463576, 0}, {
                   0.6958278145695365, 0}}, {{0.7072185430463576, 0}, {
                   0.7072185430463576, 0.02222222222222222}, {
                   0.7214569536423842, 0.02222222222222222}, {
                   0.7214569536423842, 0}, {0.7072185430463576, 0}}, {{
                   0.7214569536423842, 0}, {0.7214569536423842, 
                   0.02222222222222222}, {0.7290728476821192, 
                   0.02222222222222222}, {0.7290728476821192, 0}, {
                   0.7214569536423842, 0}}, {{0.7290728476821192, 0}, {
                   0.7290728476821192, 0.02222222222222222}, {
                   0.7414569536423841, 0.02222222222222222}, {
                   0.7414569536423841, 0}, {0.7290728476821192, 0}}, {{
                   0.7414569536423841, 0}, {0.7414569536423841, 
                   0.02222222222222222}, {0.7680794701986755, 
                   0.02222222222222222}, {0.7680794701986755, 0}, {
                   0.7414569536423841, 0}}, {{0.7680794701986755, 0}, {
                   0.7680794701986755, 0.02222222222222222}, {
                   0.7832450331125828, 0.02222222222222222}, {
                   0.7832450331125828, 0}, {0.7680794701986755, 0}}, {{
                   0.7832450331125828, 0}, {0.7832450331125828, 
                   0.02222222222222222}, {0.7908609271523179, 
                   0.02222222222222222}, {0.7908609271523179, 0}, {
                   0.7832450331125828, 0}}, {{0.7908609271523179, 0}, {
                   0.7908609271523179, 0.02222222222222222}, {
                   0.806092715231788, 0.02222222222222222}, {
                   0.806092715231788, 0}, {0.7908609271523179, 0}}, {{
                   0.806092715231788, 0}, {0.806092715231788, 
                   0.02222222222222222}, {0.8355629139072848, 
                   0.02222222222222222}, {0.8355629139072848, 0}, {
                   0.806092715231788, 0}}, {{0.8355629139072848, 0}, {
                   0.8355629139072848, 0.02222222222222222}, {
                   0.8478807947019867, 0.02222222222222222}, {
                   0.8478807947019867, 0}, {0.8355629139072848, 0}}, {{
                   0.8478807947019867, 0}, {0.8478807947019867, 
                   0.02222222222222222}, {0.863112582781457, 
                   0.02222222222222222}, {0.863112582781457, 0}, {
                   0.8478807947019867, 0}}, {{0.863112582781457, 0}, {
                   0.863112582781457, 0.02222222222222222}, {
                   0.8821192052980132, 0.02222222222222222}, {
                   0.8821192052980132, 0}, {0.863112582781457, 0}}, {{
                   0.8821192052980132, 0}, {0.8821192052980132, 
                   0.02222222222222222}, {0.8878145695364238, 
                   0.02222222222222222}, {0.8878145695364238, 0}, {
                   0.8821192052980132, 0}}, {{0.8878145695364238, 0}, {
                   0.8878145695364238, 0.02222222222222222}, {
                   0.9011258278145695, 0.02222222222222222}, {
                   0.9011258278145695, 0}, {0.8878145695364238, 0}}, {{
                   0.9011258278145695, 0}, {0.9011258278145695, 
                   0.02222222222222222}, {0.9249006622516557, 
                   0.02222222222222222}, {0.9249006622516557, 0}, {
                   0.9011258278145695, 0}}, {{0.9249006622516557, 0}, {
                   0.9249006622516557, 0.02222222222222222}, {
                   0.9372847682119205, 0.02222222222222222}, {
                   0.9372847682119205, 0}, {0.9249006622516557, 0}}, {{
                   0.9372847682119205, 0}, {0.9372847682119205, 
                   0.02222222222222222}, {0.9534437086092715, 
                   0.02222222222222222}, {0.9534437086092715, 0}, {
                   0.9372847682119205, 0}}, {{0.9534437086092715, 0}, {
                   0.9534437086092715, 0.02222222222222222}, {
                   0.9772185430463576, 0.02222222222222222}, {
                   0.9772185430463576, 0}, {0.9534437086092715, 0}}, {{
                   0.9772185430463576, 0}, {0.9772185430463576, 
                   0.02222222222222222}, {0.9944444444444445, 
                   0.02222222222222222}, {0.9944444444444445, 
                   0.02222222222222222}, {0.9954091565425941, 
                   0.022137820850067817`}, {0.9963445563518093, 
                   0.021887181226588375`}, {0.9972222222222222, 
                   0.021477918909913546`}, {0.9980154867204808, 
                   0.020922469128438762`}, {0.9987002469062166, 
                   0.020237708942702992`}, {0.9992556966876913, 
                   0.01944444444444444}, {0.9996649590043661, 
                   0.018566778574031488`}, {0.9999155986278456, 
                   0.017631378764816276`}, {1., 0.016666666666666663`}, {1., 
                   0.016666666666666663`}, {1., 0.005555555555555555}, {1., 
                   0.005555555555555555}, {0.9999155986278456, 
                   0.004590843457405942}, {0.9996649590043661, 
                   0.003655443648190729}, {0.9992556966876913, 
                   0.002777777777777778}, {0.9987002469062166, 
                   0.001984513279519226}, {0.9980154867204808, 
                   0.0012997530937834557`}, {0.9972222222222222, 
                   0.0007443033123086746}, {0.9963445563518093, 
                   0.0003350409956338427}, {0.9954091565425941, 
                   0.00008440137215439975}, {0.9944444444444445, 0.}, {
                   0.9944444444444445, 0}, {0.9772185430463576, 0}}}, 
                 VertexColors -> {{1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
                    1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 
                   1., 1.}, {0.75, 0.75, 0.75, 0.75, 0.75}, {1., 1., 1., 1., 
                   1.}, {0.75, 0.75, 0.75, 0.75, 0.75}, {1., 1., 1., 1., 
                   1.}, {0.5, 0.5, 0.5, 0.5, 0.5}, {1., 1., 1., 1., 1.}, {
                   0.75, 0.75, 0.75, 0.75, 0.75}, {1., 1., 1., 1., 1.}, {0.75,
                    0.75, 0.75, 0.75, 0.75}, {1., 1., 1., 1., 1.}, {0.75, 
                   0.75, 0.75, 0.75, 0.75}, {1., 1., 1., 1., 1.}, {0.75, 0.75,
                    0.75, 0.75, 0.75}, {1., 1., 1., 1., 1.}, {0.25, 0.25, 
                   0.25, 0.25, 0.25}, {1., 1., 1., 1., 1.}, {0.5, 0.5, 0.5, 
                   0.5, 0.5}, {1., 1., 1., 1., 1.}, {0.5, 0.5, 0.5, 0.5, 
                   0.5}, {1., 1., 1., 1., 1.}, {0., 0., 0., 0., 0.}, {1., 1., 
                   1., 1., 1.}, {0.25, 0.25, 0.25, 0.25, 0.25}, {1., 1., 1., 
                   1., 1.}, {0.25, 0.25, 0.25, 0.25, 0.25}, {1., 1., 1., 1., 
                   1.}, {0., 0., 0., 0., 0.}, {1., 1., 1., 1., 1.}, {0.5, 0.5,
                    0.5, 0.5, 0.5}, {1., 1., 1., 1., 1.}, {0.5, 0.5, 0.5, 0.5,
                    0.5}, {1., 1., 1., 1., 1.}, {0.25, 0.25, 0.25, 0.25, 0.25,
                    0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 
                   0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25,
                    0.25, 0.25, 0.25}, {0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 
                   0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25,
                    0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 
                   0.25, 0.25}, {0.5, 0.5, 0.5, 0.5, 0.5}, {1., 1., 1., 1., 
                   1.}, {0.5, 0.5, 0.5, 0.5, 0.5}, {1., 1., 1., 1., 1.}, {0.5,
                    0.5, 0.5, 0.5, 0.5}, {1., 1., 1., 1., 1.}, {0.5, 0.5, 0.5,
                    0.5, 0.5}, {1., 1., 1., 1., 1.}, {0.5, 0.5, 0.5, 0.5, 
                   0.5}, {1., 1., 1., 1., 1.}, {0.25, 0.25, 0.25, 0.25, 
                   0.25}, {1., 1., 1., 1., 1.}, {0.5, 0.5, 0.5, 0.5, 0.5}, {
                   1., 1., 1., 1., 1.}, {0., 0., 0., 0., 0.}, {1., 1., 1., 1.,
                    1.}, {0., 0., 0., 0., 0.}, {1., 1., 1., 1., 1.}, {0.75, 
                   0.75, 0.75, 0.75, 0.75}, {1., 1., 1., 1., 1.}, {0., 0., 0.,
                    0., 0.}, {1., 1., 1., 1., 1.}, {0.75, 0.75, 0.75, 0.75, 
                   0.75}, {1., 1., 1., 1., 1.}, {0.5, 0.5, 0.5, 0.5, 0.5}, {
                   1., 1., 1., 1., 1.}, {0.25, 0.25, 0.25, 0.25, 0.25}, {1., 
                   1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
                    1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.}}], 
                EdgeForm[None], 
                RGBColor[1, 0, 0], 
                PolygonBox[{}]}, Frame -> {{False, False}, {True, False}}, 
               FrameTicks -> {{None, None}, {{{0., 
                    FormBox["\"0 Mb\"", TraditionalForm]}, {
                   0.12133481939366733`, 
                    FormBox["\"30 Mb\"", TraditionalForm]}, {
                   0.24266963878733466`, 
                    FormBox["\"60 Mb\"", TraditionalForm]}, {
                   0.364004458181002, 
                    FormBox["\"90 Mb\"", TraditionalForm]}, {
                   0.4853392775746693, 
                    FormBox["\"120 Mb\"", TraditionalForm]}, {
                   0.6066740969683367, 
                    FormBox["\"150 Mb\"", TraditionalForm]}, {
                   0.728008916362004, 
                    FormBox["\"180 Mb\"", TraditionalForm]}, {
                   0.8493437357556713, 
                    FormBox["\"210 Mb\"", TraditionalForm]}, {
                   0.9706785551493387, 
                    FormBox["\"240 Mb\"", TraditionalForm]}}, None}}, 
               FrameStyle -> {{None, None}, {
                  GrayLevel[0.5], None}}, ImageSize -> 450, AspectRatio -> 
               Automatic, 
               ImagePadding -> {{10, Automatic}, {Automatic, Automatic}}], 
              StyleBox["\"chromosome 1\"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False]}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  
                  ItemBox[#2, Alignment -> {Left, Inherited}, 
                   DefaultBaseStyle -> "LabeledLabel"]}, {
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {2, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Top", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "2"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/GenomeDataSourceInformationNotes.\
html", "text" -> "Genome data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
GenomeSequenceDataSourceInformationNotes.html", "text" -> 
        "Genome sequence data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
    "GenomeSequence", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "0.515", "parsetiming" -> "0.11900000000000001", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSPa5221g38g1c8heg406hc00003737b1ga1ffbh071", "host" -> 
    "http://www4b.wolframalpha.com", "server" -> "43", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa5231g38g1c8heg406hc00006532g6f5c70895982376725253226070752", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2018, 3, 13, 19, 41, 39.500715`8.34917993535776}, "Line" -> 9, 
    "SessionID" -> 15920898660014334325}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Chromosome 1"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{850., {125., 131.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7299732996285686`*^9},ExpressionUUID->"3b8647a5-66ea-4834-a8cb-\
760a58699ae1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chromosome X genome sequences", "WolframAlphaLong",
 CellChangeTimes->{{3.717867397082902*^9, 3.717867405519348*^9}, {
  3.729973315966069*^9, 3.729973318944635*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"8c1a17dd-1e40-42e7-b054-409899df3707"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Chromosome X genome sequences", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"GenomeData[\"ChromosomeX\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox[
                StyleBox[
                 TemplateBox[{"\"chromosome X\"", "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"human\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                 0], 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`GenomeSequenceData, {
                   "ChromosomeX", {"Species" -> "HomoSapiens"}}}]], Identity],
               TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Reference sequence length", "scanner" -> "Data", "id" -> 
     "ChromosomeLength:GenomeSequenceData", "position" -> "200", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["154.9", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "154.9"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Mbp\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"megabase pairs\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Helvetica", FontSize -> Smaller, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Idiogram", "scanner" -> "Data", "id" -> 
     "ChromosomeIdiogram:GenomeSequenceData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GrayLevel[1], 
                EdgeForm[{
                  GrayLevel[0], 
                  Thickness[0.0015]}], 
                
                PolygonBox[{{{0.03751451800232288, 0}, {
                   0.005555555555555555, 0}, {0.005555555555555554, 0.}, {
                   0.004590843457405942, 0.00008440137215439975}, {
                   0.00365544364819073, 0.00033504099563384186`}, {
                   0.002777777777777775, 0.0007443033123086754}, {
                   0.001984513279519225, 0.0012997530937834557`}, {
                   0.0012997530937834557`, 0.001984513279519226}, {
                   0.0007443033123086746, 0.002777777777777777}, {
                   0.00033504099563384186`, 0.003655443648190729}, {
                   0.00008440137215439888, 0.004590843457405944}, {0., 
                   0.005555555555555556}, {0., 0.005555555555555555}, {0., 
                   0.016666666666666663`}, {0., 0.016666666666666663`}, {
                   0.00008440137215439975, 0.017631378764816276`}, {
                   0.0003350409956338427, 0.018566778574031488`}, {
                   0.0007443033123086737, 0.01944444444444444}, {
                   0.0012997530937834557`, 0.020237708942702992`}, {
                   0.0019845132795192257`, 0.020922469128438762`}, {
                   0.002777777777777776, 0.021477918909913542`}, {
                   0.003655443648190729, 0.021887181226588375`}, {
                   0.004590843457405942, 0.022137820850067817`}, {
                   0.005555555555555555, 0.02222222222222222}, {
                   0.005555555555555555, 0.02222222222222222}, {
                   0.03751451800232288, 0.02222222222222222}, {
                   0.03751451800232288, 0}}, {{0.03751451800232288, 0}, {
                   0.03751451800232288, 0.02222222222222222}, {
                   0.058536585365853655`, 0.02222222222222222}, {
                   0.058536585365853655`, 0}, {0.03751451800232288, 0}}, {{
                   0.058536585365853655`, 0}, {0.058536585365853655`, 
                   0.02222222222222222}, {0.10058072009291522`, 
                   0.02222222222222222}, {0.10058072009291522`, 0}, {
                   0.058536585365853655`, 0}}, {{0.10058072009291522`, 0}, {
                   0.10058072009291522`, 0.02222222222222222}, {
                   0.12009291521486644`, 0.02222222222222222}, {
                   0.12009291521486644`, 0}, {0.10058072009291522`, 0}}, {{
                   0.12009291521486644`, 0}, {0.12009291521486644`, 
                   0.02222222222222222}, {0.1562137049941928, 
                   0.02222222222222222}, {0.1562137049941928, 0}, {
                   0.12009291521486644`, 0}}, {{0.1562137049941928, 0}, {
                   0.1562137049941928, 0.02222222222222222}, {
                   0.16817653890824621`, 0.02222222222222222}, {
                   0.16817653890824621`, 0}, {0.1562137049941928, 0}}, {{
                   0.16817653890824621`, 0}, {0.16817653890824621`, 
                   0.02222222222222222}, {0.18315911730545878`, 
                   0.02222222222222222}, {0.18315911730545878`, 0}, {
                   0.16817653890824621`, 0}}, {{0.18315911730545878`, 0}, {
                   0.18315911730545878`, 0.02222222222222222}, {
                   0.20720092915214866`, 0.02222222222222222}, {
                   0.20720092915214866`, 0}, {0.18315911730545878`, 0}}, {{
                   0.20720092915214866`, 0}, {0.20720092915214866`, 
                   0.02222222222222222}, {0.216260162601626, 
                   0.02222222222222222}, {0.216260162601626, 0}, {
                   0.20720092915214866`, 0}}, {{0.216260162601626, 0}, {
                   0.216260162601626, 0.02222222222222222}, {
                   0.2462253193960511, 0.02222222222222222}, {
                   0.2462253193960511, 0}, {0.216260162601626, 0}}, {{
                   0.2462253193960511, 0}, {0.2462253193960511, 
                   0.02222222222222222}, {0.28222996515679444`, 
                   0.02222222222222222}, {0.28222996515679444`, 0}, {
                   0.2462253193960511, 0}}, {{0.28222996515679444`, 0}, {
                   0.28222996515679444`, 0.02222222222222222}, {
                   0.3047619047619048, 0.02222222222222222}, {
                   0.3047619047619048, 0}, {0.28222996515679444`, 0}}, {{
                   0.3047619047619048, 0}, {0.3047619047619048, 
                   0.02222222222222222}, {0.34239256678281066`, 
                   0.02222222222222222}, {0.34239256678281066`, 0}, {
                   0.3047619047619048, 0}}, {{0.34239256678281066`, 0}, {
                   0.34239256678281066`, 0.02222222222222222}, {
                   0.36341463414634145`, 0.02222222222222222}, {
                   0.36341463414634145`, 0}, {0.34239256678281066`, 0}}, {{
                   0.36341463414634145`, 0}, {0.36341463414634145`, 
                   0.02222222222222222}, {0.3723577235772358, 
                   0.02222222222222222}, {0.3723577235772358, 0}, {
                   0.36341463414634145`, 0}}, {{0.3723577235772358, 0}, {
                   0.3723577235772358, 0.02222222222222222}, {
                   0.37181571815718156`, 0.02222222222222222}, {
                   0.37181571815718156`, 0.02222222222222222}, {
                   0.3737451423534808, 0.022053419477913422`}, {
                   0.3756159419719112, 0.021552140230954534`}, {
                   0.3773712737127371, 0.020733615597604872`}, {
                   0.3789578027092542, 0.019622716034655308`}, {
                   0.38032732308072575`, 0.018253195663183768`}, {
                   0.38143822264367533`, 0.016666666666666663`}, {
                   0.38225674727702497`, 0.014911334925840762`}, {
                   0.3827580265239839, 0.013040535307410336`}, {
                   0.3829268292682927, 0.01111111111111111}, {
                   0.3829268292682927, 0.01111111111111111}, {
                   0.3829268292682927, 0.01111111111111111}, {
                   0.3829268292682927, 0.01111111111111111}, {
                   0.3827580265239839, 0.009181686914811884}, {
                   0.38225674727702497`, 0.007310887296381458}, {
                   0.38143822264367533`, 0.005555555555555556}, {
                   0.38032732308072575`, 0.003969026559038452}, {
                   0.3789578027092542, 0.0025995061875669113`}, {
                   0.3773712737127371, 0.0014886066246173491`}, {
                   0.3756159419719112, 0.0006700819912676854}, {
                   0.3737451423534808, 0.0001688027443087995}, {
                   0.37181571815718156`, 0.}, {0.37181571815718156`, 0}, {
                   0.3723577235772358, 0}}, {{0.40545876887340304`, 0}, {
                   0.3940379403794038, 0}, {0.3940379403794038, 0.}, {
                   0.3921085161831046, 0.0001688027443087995}, {
                   0.39023771656467415`, 0.0006700819912676837}, {
                   0.3884823848238483, 0.0014886066246173509`}, {
                   0.38689585582733116`, 0.0025995061875669113`}, {
                   0.3855263354558596, 0.003969026559038452}, {
                   0.38441543589291005`, 0.005555555555555554}, {
                   0.3835969112595604, 0.007310887296381458}, {
                   0.3830956320126015, 0.009181686914811887}, {
                   0.3829268292682927, 0.011111111111111112`}, {
                   0.3829268292682927, 0.01111111111111111}, {
                   0.3829268292682927, 0.01111111111111111}, {
                   0.3829268292682927, 0.011111111111111112`}, {
                   0.3830956320126015, 0.013040535307410336`}, {
                   0.3835969112595604, 0.014911334925840763`}, {
                   0.38441543589291005`, 0.016666666666666663`}, {
                   0.3855263354558596, 0.01825319566318377}, {
                   0.38689585582733116`, 0.019622716034655308`}, {
                   0.3884823848238483, 0.020733615597604872`}, {
                   0.39023771656467415`, 0.021552140230954538`}, {
                   0.3921085161831046, 0.022053419477913422`}, {
                   0.3940379403794038, 0.02222222222222222}, {
                   0.3940379403794038, 0.02222222222222222}, {
                   0.40545876887340304`, 0.02222222222222222}, {
                   0.40545876887340304`, 0}}, {{0.40545876887340304`, 0}, {
                   0.40545876887340304`, 0.02222222222222222}, {
                   0.42044134727061555`, 0.02222222222222222}, {
                   0.42044134727061555`, 0}, {0.40545876887340304`, 0}}, {{
                   0.42044134727061555`, 0}, {0.42044134727061555`, 
                   0.02222222222222222}, {0.44448315911730546`, 
                   0.02222222222222222}, {0.44448315911730546`, 0}, {
                   0.42044134727061555`, 0}}, {{0.44448315911730546`, 0}, {
                   0.44448315911730546`, 0.02222222222222222}, {
                   0.48048780487804876`, 0.02222222222222222}, {
                   0.48048780487804876`, 0}, {0.44448315911730546`, 0}}, {{
                   0.48048780487804876`, 0}, {0.48048780487804876`, 
                   0.02222222222222222}, {0.49849012775842044`, 
                   0.02222222222222222}, {0.49849012775842044`, 0}, {
                   0.48048780487804876`, 0}}, {{0.49849012775842044`, 0}, {
                   0.49849012775842044`, 0.02222222222222222}, {
                   0.5164924506387921, 0.02222222222222222}, {
                   0.5164924506387921, 0}, {0.49849012775842044`, 0}}, {{
                   0.5164924506387921, 0}, {0.5164924506387921, 
                   0.02222222222222222}, {0.5495934959349593, 
                   0.02222222222222222}, {0.5495934959349593, 0}, {
                   0.5164924506387921, 0}}, {{0.5495934959349593, 0}, {
                   0.5495934959349593, 0.02222222222222222}, {
                   0.5585365853658537, 0.02222222222222222}, {
                   0.5585365853658537, 0}, {0.5495934959349593, 0}}, {{
                   0.5585365853658537, 0}, {0.5585365853658537, 
                   0.02222222222222222}, {0.5931475029036004, 
                   0.02222222222222222}, {0.5931475029036004, 0}, {
                   0.5585365853658537, 0}}, {{0.5931475029036004, 0}, {
                   0.5931475029036004, 0.02222222222222222}, {
                   0.6020905923344948, 0.02222222222222222}, {
                   0.6020905923344948, 0}, {0.5931475029036004, 0}}, {{
                   0.6020905923344948, 0}, {0.6020905923344948, 
                   0.02222222222222222}, {0.6306620209059234, 
                   0.02222222222222222}, {0.6306620209059234, 0}, {
                   0.6020905923344948, 0}}, {{0.6306620209059234, 0}, {
                   0.6306620209059234, 0.02222222222222222}, {
                   0.662137049941928, 0.02222222222222222}, {
                   0.662137049941928, 0}, {0.6306620209059234, 0}}, {{
                   0.662137049941928, 0}, {0.662137049941928, 
                   0.02222222222222222}, {0.6786295005807201, 
                   0.02222222222222222}, {0.6786295005807201, 0}, {
                   0.662137049941928, 0}}, {{0.6786295005807201, 0}, {
                   0.6786295005807201, 0.02222222222222222}, {
                   0.70267131242741, 0.02222222222222222}, {
                   0.70267131242741, 0}, {0.6786295005807201, 0}}, {{
                   0.70267131242741, 0}, {0.70267131242741, 
                   0.02222222222222222}, {0.7342624854819977, 
                   0.02222222222222222}, {0.7342624854819977, 0}, {
                   0.70267131242741, 0}}, {{0.7342624854819977, 0}, {
                   0.7342624854819977, 0.02222222222222222}, {
                   0.7687572590011614, 0.02222222222222222}, {
                   0.7687572590011614, 0}, {0.7342624854819977, 0}}, {{
                   0.7687572590011614, 0}, {0.7687572590011614, 
                   0.02222222222222222}, {0.8198606271777004, 
                   0.02222222222222222}, {0.8198606271777004, 0}, {
                   0.7687572590011614, 0}}, {{0.8198606271777004, 0}, {
                   0.8198606271777004, 0.02222222222222222}, {
                   0.8423925667828107, 0.02222222222222222}, {
                   0.8423925667828107, 0}, {0.8198606271777004, 0}}, {{
                   0.8423925667828107, 0}, {0.8423925667828107, 
                   0.02222222222222222}, {0.8588850174216028, 
                   0.02222222222222222}, {0.8588850174216028, 0}, {
                   0.8423925667828107, 0}}, {{0.8588850174216028, 0}, {
                   0.8588850174216028, 0.02222222222222222}, {
                   0.8829268292682927, 0.02222222222222222}, {
                   0.8829268292682927, 0}, {0.8588850174216028, 0}}, {{
                   0.8829268292682927, 0}, {0.8829268292682927, 
                   0.02222222222222222}, {0.9068524970963996, 
                   0.02222222222222222}, {0.9068524970963996, 0}, {
                   0.8829268292682927, 0}}, {{0.9068524970963996, 0}, {
                   0.9068524970963996, 0.02222222222222222}, {
                   0.9159117305458769, 0.02222222222222222}, {
                   0.9159117305458769, 0}, {0.9068524970963996, 0}}, {{
                   0.9159117305458769, 0}, {0.9159117305458769, 
                   0.02222222222222222}, {0.945993031358885, 
                   0.02222222222222222}, {0.945993031358885, 0}, {
                   0.9159117305458769, 0}}, {{0.945993031358885, 0}, {
                   0.945993031358885, 0.02222222222222222}, {
                   0.9944444444444445, 0.02222222222222222}, {
                   0.9944444444444445, 0.02222222222222222}, {
                   0.9954091565425941, 0.022137820850067817`}, {
                   0.9963445563518093, 0.021887181226588375`}, {
                   0.9972222222222222, 0.021477918909913546`}, {
                   0.9980154867204808, 0.020922469128438762`}, {
                   0.9987002469062166, 0.020237708942702992`}, {
                   0.9992556966876913, 0.01944444444444444}, {
                   0.9996649590043661, 0.018566778574031488`}, {
                   0.9999155986278456, 0.017631378764816276`}, {1., 
                   0.016666666666666663`}, {1., 0.016666666666666663`}, {1., 
                   0.005555555555555555}, {1., 0.005555555555555555}, {
                   0.9999155986278456, 0.004590843457405942}, {
                   0.9996649590043661, 0.003655443648190729}, {
                   0.9992556966876913, 0.002777777777777778}, {
                   0.9987002469062166, 0.001984513279519226}, {
                   0.9980154867204808, 0.0012997530937834557`}, {
                   0.9972222222222222, 0.0007443033123086746}, {
                   0.9963445563518093, 0.0003350409956338427}, {
                   0.9954091565425941, 0.00008440137215439975}, {
                   0.9944444444444445, 0.}, {0.9944444444444445, 0}, {
                   0.945993031358885, 0}}}, 
                 VertexColors -> {{1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
                    1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 
                   1., 1.}, {0.5, 0.5, 0.5, 0.5, 0.5}, {1., 1., 1., 1., 1.}, {
                   0.5, 0.5, 0.5, 0.5, 0.5}, {1., 1., 1., 1., 1.}, {0.5, 0.5, 
                   0.5, 0.5, 0.5}, {1., 1., 1., 1., 1.}, {0., 0., 0., 0., 
                   0.}, {1., 1., 1., 1., 1.}, {0., 0., 0., 0., 0.}, {1., 1., 
                   1., 1., 1.}, {0.25, 0.25, 0.25, 0.25, 0.25}, {1., 1., 1., 
                   1., 1.}, {0.75, 0.75, 0.75, 0.75, 0.75}, {1., 1., 1., 1., 
                   1.}, {0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25,
                    0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 
                   0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25}, {
                   0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25,
                    0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 
                   0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25}, {1., 1., 
                   1., 1., 1.}, {0.5, 0.5, 0.5, 0.5, 0.5}, {1., 1., 1., 1., 
                   1.}, {0.5, 0.5, 0.5, 0.5, 0.5}, {1., 1., 1., 1., 1.}, {0., 
                   0., 0., 0., 0.}, {1., 1., 1., 1., 1.}, {0., 0., 0., 0., 
                   0.}, {1., 1., 1., 1., 1.}, {0.25, 0.25, 0.25, 0.25, 
                   0.25}, {1., 1., 1., 1., 1.}, {0.5, 0.5, 0.5, 0.5, 0.5}, {
                   1., 1., 1., 1., 1.}, {0.25, 0.25, 0.25, 0.25, 0.25}, {1., 
                   1., 1., 1., 1.}, {0., 0., 0., 0., 0.}, {1., 1., 1., 1., 
                   1.}, {0.75, 0.75, 0.75, 0.75, 0.75}, {1., 1., 1., 1., 
                   1.}, {0.25, 0.25, 0.25, 0.25, 0.25}, {1., 1., 1., 1., 
                   1.}, {0., 0., 0., 0., 0.}, {1., 1., 1., 1., 1., 1., 1., 1.,
                    1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 
                   1., 1., 1., 1., 1.}}], 
                EdgeForm[None], 
                RGBColor[1, 0, 0], 
                PolygonBox[{}]}, Frame -> {{False, False}, {True, False}}, 
               FrameTicks -> {{None, None}, {{{0., 
                    FormBox["\"0 Mb\"", TraditionalForm]}, {
                   0.19365614237196782`, 
                    FormBox["\"30 Mb\"", TraditionalForm]}, {
                   0.38731228474393564`, 
                    FormBox["\"60 Mb\"", TraditionalForm]}, {
                   0.5809684271159035, 
                    FormBox["\"90 Mb\"", TraditionalForm]}, {
                   0.7746245694878713, 
                    FormBox["\"120 Mb\"", TraditionalForm]}, {
                   0.9682807118598391, 
                    FormBox["\"150 Mb\"", TraditionalForm]}}, None}}, 
               FrameStyle -> {{None, None}, {
                  GrayLevel[0.5], None}}, ImageSize -> 450, AspectRatio -> 
               Automatic, 
               ImagePadding -> {{10, Automatic}, {Automatic, Automatic}}], 
              StyleBox["\"chromosome X\"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False]}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  
                  ItemBox[#2, Alignment -> {Left, Inherited}, 
                   DefaultBaseStyle -> "LabeledLabel"]}, {
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {2, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Top", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "2"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/GenomeDataSourceInformationNotes.\
html", "text" -> "Genome data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
GenomeSequenceDataSourceInformationNotes.html", "text" -> 
        "Genome sequence data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
    "GenomeSequence", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "0.66", "parsetiming" -> "0.271", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSPa264512h331ecce6i6c8a00003aadc6358iebf5gb", "host" -> 
    "http://www4b.wolframalpha.com", "server" -> "30", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa264612h331ecce6i6c8a00003b35hb945f4876a05186426821976139686", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2018, 3, 13, 19, 42, 0.017569`4.997322031996094}, "Line" -> 11,
     "SessionID" -> 15920898660014334325}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Chromosome X genome sequences"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{850., {125., 131.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.729973320130471*^9},ExpressionUUID->"7c8cf1b6-7f9c-4351-9be5-\
08646ab0d3bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["human proteome", "WolframAlphaLong",
 CellChangeTimes->{{3.7178674106953897`*^9, 3.71786754137344*^9}, {
  3.717867599629691*^9, 3.7178676017192574`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"57e9bfba-0964-45d0-857d-ff397c534e0e"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "human proteome", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement[
    "examplepage", {
     "category" -> "Proteins", "url" -> 
      "http://www.wolframalpha.com/examples/Proteins-content.html"}, {}]}, 
   Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "false", "error" -> "false", "numpods" -> "0", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.273", 
    "parsetiming" -> "0.193", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa3593169cd82b8e685hh000000f6d52ii999f70a8", "host" -> 
    "http://www4b.wolframalpha.com", "server" -> "53", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2018, 3, 13, 19, 42, 22.079588`8.096565948457675}, "Line" -> 
    13, "SessionID" -> 15920898660014334325}, Typeset`showpods$$ = {}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "human proteome"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {}, {}, Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, 
        Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{850., {189., 195.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.729973342155303*^9},ExpressionUUID->"4a235c96-0136-40c5-a326-\
f1847f962674"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code accompanying the Manuscript", "Section",
 CellChangeTimes->{{3.720445689190505*^9, 
  3.720445695225533*^9}},ExpressionUUID->"c3d68d01-a4ba-4317-8aff-\
dd540925d720"],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  "\"\<https://github.com/gmiaslab/MathematicaBioinformatics/releases\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7204456537034483`*^9, 3.720445657129876*^9}, {
  3.720445699447613*^9, 
  3.720445704544548*^9}},ExpressionUUID->"d1b5268d-4e92-4e8b-87c1-\
8f57034412b4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{940, 1152},
WindowMargins->{{Automatic, 365}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 14, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6b7a09ba-4f7e-455b-8d7f-2ade68895c4e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 414, 6, 96, "Title",ExpressionUUID->"8fce1eb3-3baf-4d7c-8a22-51601254c34a"],
Cell[997, 30, 697, 15, 69, "Text",ExpressionUUID->"8bf39aff-c1cd-4703-a4e0-7331c05c1135"],
Cell[CellGroupData[{
Cell[1719, 49, 480, 7, 113, "Chapter",ExpressionUUID->"ee101586-1e20-47e9-8e2d-aa6489d0781f"],
Cell[CellGroupData[{
Cell[2224, 60, 210, 4, 67, "Section",ExpressionUUID->"4fe8dba8-d822-42dc-9733-6a2e5c0a7c4a"],
Cell[2437, 66, 1525, 27, 298, "Text",ExpressionUUID->"8bba13dc-b1f3-43bd-bc90-7e31a32f6998"],
Cell[3965, 95, 631, 12, 122, "Text",ExpressionUUID->"1c4f6601-265a-4b80-9283-0636c2c4d8cb"],
Cell[CellGroupData[{
Cell[4621, 111, 175, 4, 28, "Input",ExpressionUUID->"272ee073-15b9-4b5e-9b0d-873dc59de1bf"],
Cell[4799, 117, 245, 4, 32, "Output",ExpressionUUID->"a136b6c6-8dcd-43be-a9c2-122103dc479b"]
}, Open  ]],
Cell[5059, 124, 466, 8, 78, "Text",ExpressionUUID->"2e41a1c2-6a0b-407b-a736-477d5f7d1a29"],
Cell[CellGroupData[{
Cell[5550, 136, 307, 6, 51, "Item",ExpressionUUID->"43798866-8917-468e-a728-b5b368d5f597"],
Cell[5860, 144, 236, 6, 31, "Item",ExpressionUUID->"adc15831-829f-4080-9bb6-b385e1d1fbb9"],
Cell[6099, 152, 285, 6, 51, "Item",ExpressionUUID->"3fa9b1fc-c73f-45e4-b82c-fc18b1feacba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6421, 163, 221, 4, 44, "WolframAlphaLong",ExpressionUUID->"acb82f59-2055-446a-b438-57c131615126"],
Cell[6645, 169, 8402, 162, 338, "Print",ExpressionUUID->"81c46f6f-2579-4841-a385-0ed9d3e197c4"]
}, Open  ]],
Cell[15062, 334, 267, 4, 31, "Item",ExpressionUUID->"09adf76a-987d-40d1-9ac8-e105be0f1afa"],
Cell[15332, 340, 133, 3, 34, "WolframAlphaShort",ExpressionUUID->"bb6e1655-3b73-4887-9456-1199e34faeb1"],
Cell[15468, 345, 260, 4, 31, "Item",ExpressionUUID->"1a18b631-8a27-4ee6-b9fb-e65d2ccf3513"],
Cell[15731, 351, 132, 3, 44, "WolframAlphaLong",ExpressionUUID->"4a03dff9-161d-46d6-95f5-68754ff02a80"],
Cell[15866, 356, 226, 4, 31, "Item",ExpressionUUID->"103c3c10-95ee-4bdf-a773-a55310dc4fb1"],
Cell[16095, 362, 1189, 27, 40, "Input",ExpressionUUID->"7fbab6cd-a95e-43e8-8730-c7bd1df11092"],
Cell[17287, 391, 213, 5, 34, "Text",ExpressionUUID->"356788d9-0554-461e-8101-52328fb88564"],
Cell[CellGroupData[{
Cell[17525, 400, 278, 4, 44, "WolframAlphaLong",ExpressionUUID->"3973a80d-a0be-4d62-91f4-eeff513b2c44"],
Cell[17806, 406, 55261, 1091, 764, "Print",ExpressionUUID->"114a6bb5-9be5-40d5-862c-a29f30c7ca3b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73116, 1503, 186, 3, 67, "Section",ExpressionUUID->"d2094de9-c00e-4ffc-9474-3fac2b95c5be"],
Cell[CellGroupData[{
Cell[73327, 1510, 166, 3, 44, "WolframAlphaLong",ExpressionUUID->"c255643c-34e1-4098-810b-25b793a730ec"],
Cell[73496, 1515, 12552, 251, 368, "Print",ExpressionUUID->"00d772a4-2790-44e4-8ef2-4b89016c0f81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86085, 1771, 168, 3, 44, "WolframAlphaLong",ExpressionUUID->"dcdcf326-1f78-4189-82a9-92363f23812a"],
Cell[86256, 1776, 3188, 65, 458, "Print",ExpressionUUID->"963938c8-8e72-4deb-a35d-68f9e8db810a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89481, 1846, 211, 4, 44, "WolframAlphaLong",ExpressionUUID->"adc9b8c8-1211-4085-857c-d17da5a680c6"],
Cell[89695, 1852, 63606, 1280, 1292, "Print",ExpressionUUID->"9e643f09-5550-4628-b12a-fa21598e0ecc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153338, 3137, 290, 6, 28, "Input",ExpressionUUID->"ffff4d8d-4bd5-4758-8dc7-4bba0ad26bca"],
Cell[153631, 3145, 361, 8, 32, "Output",ExpressionUUID->"e3328147-e927-4268-b24c-67f4b0d81d7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154029, 3158, 186, 2, 44, "WolframAlphaLong",ExpressionUUID->"b6fbaee0-319a-49c3-9c04-b9e570826a29"],
Cell[154218, 3162, 36602, 611, 266, "Print",ExpressionUUID->"3b8647a5-66ea-4834-a8cb-760a58699ae1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190857, 3778, 251, 3, 44, "WolframAlphaLong",ExpressionUUID->"8c1a17dd-1e40-42e7-b054-409899df3707"],
Cell[191111, 3783, 30059, 516, 266, "Print",ExpressionUUID->"7c8cf1b6-7f9c-4351-9be5-08646ab0d3bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221207, 4304, 239, 3, 44, "WolframAlphaLong",ExpressionUUID->"57e9bfba-0964-45d0-857d-ff397c534e0e"],
Cell[221449, 4309, 2561, 50, 394, "Print",ExpressionUUID->"4a235c96-0136-40c5-a326-f1847f962674"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[224059, 4365, 177, 3, 67, "Section",ExpressionUUID->"c3d68d01-a4ba-4317-8aff-dd540925d720"],
Cell[224239, 4370, 315, 7, 28, "Input",ExpressionUUID->"d1b5268d-4e92-4e8b-87c1-8f57034412b4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

